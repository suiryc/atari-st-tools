atari-st-tools {

  check {
    # Whether to check disk boot sector, and warn upon mismatch with actual
    # disk format.
    boot-sector = false
  }

  warn {
    # Whether to explicitly warn upon unknown disk format.
    unknown-format = false
  }

  zip {
    # Upon reading zip archive, whether files having the same name (without
    # extension) than the disk image are allowed.
    allow-disk-name = true

    # Upon reading zip archive, list of (regular expressions) allowed extra file
    # names (e.g. "(?i).*\\.txt" to allow all '.txt' files).
    allow-extra = []

    # Charset to use for non-UTF8 entries in zip archives
    charset = "ISO-8859-1"
  }

  disk-name {
    # List of disk name (usually from known compilations) formatters.
    # Includes:
    #   - 'label' (informational)
    #   - 'format' (input to match): first capturing group must contain the disk
    #      number (integer); there may be other capturing groups (e.g. disk
    #      revision)
    #   - 'normalized' (output): printf-style format, where first argument is
    #      the captured disk number (integer); other arguments are the other
    #      capturing groups (if any) for which value is the empty string in case
    #      of optional (not captured) group
    #   - 'normalizers': supersedes the unique format/normalized pair by a list
    # The normalized name should match the input 'format', so that normalizing
    # already normalized names does nothing.
    #
    # Example with a unique normalized name:
    #  {
    #    label = "Medway Boys"
    #    format = "(?i)(?:med|mboys)(?:[-_])?([0-9]+)(?:[-_])?([a-z].*|)"
    #    normalized = "med_%1$03d%2$s"
    #  }
    #
    # Example with multiple normalized format/names:
    #  {
    #    label = "Automation"
    #    normalizers = [{
    #      format = "(?i)(?:a|aut|auto|autm|wnw|lsd)(?:[-_])?([0-9]+)(?:[-_])?(v[0-9].*|)?"
    #      normalized = "a_%1$03d%2$s"
    #    }, {
    #      format = "(?i)(?:a|aut|auto|autm|wnw|lsd)(?:[-_])?([0-9]+)(?:[-_])?([a-z].*)"
    #      normalized = "a_%1$03d_%2$s"
    #    }, {
    #      format = "(?i)(?:a|aut|auto|autm|wnw|lsd)(?:[-_])?([0-9]+)(?:[-_])([0-9].*)"
    #      normalized = "a_%1$03d_%2$s"
    #    }]
    #  }
    formatters = []
  }

  duplicates {
    boot-sector {
      # Whether to allow disks as duplicates if only boot sector is different
      allow = false

      # Suffix folder where to save the 'alternatives' images with different
      # boot sector.
      # Image is dropped if option is not present.
      # Image is moved to subfolder "${atari-st-tools.output.alternatives}.${suffix}"
      # if not already in an 'alternative' folder.
      #alternative-image = "boot-sector"

      # Suffix name where to save the alternative disk boot sector.
      # Nothing done if option is not present.
      # Filename is "${diskName}.${suffix}"
      #alternative-sector = "alternative.bs"
    }

    # List of disk duplicates by name with different checksums.
    # Each entry is an array that first lists the checksums to keep, then the
    # checksums to drop. e.g. to list 4 duplicates with 'keepX' checksums to
    # keep and 'dropX' checksums to drop:
    #  [["keep1", "keep2"], ["drop1", "drop2"]]
    by-name = []
  }

  output {
    # Output root path.
    root = "~/atari"

    # Relative (to root) path for 'preferred' (retained) disks.
    # Use upon 'deduplicate' command.
    preferred = "preferred"

    # Prefix folder for 'alternatives' (retained, but not preferred) disks.
    # Note: files are considered to be in an 'alternative' folder if the parent
    # folder is this value or is prefixed (followed by '.') by this value.
    alternatives = "alternatives"

    # Relative (to root) path for 'others' (duplicate/excluded) disks.
    # Use upon 'deduplicate' command.
    others = "others"

    # Relative (to root) path for converted disks.
    # Use upon 'convert' command.
    converted = "converted"
  }

}
